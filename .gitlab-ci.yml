stages:
  - build
  - deploy

variables:
  IMAGE_NAME: "$CI_REGISTRY_IMAGE/$FRONTEND_APP_NAME"
  IMAGE_TAG: "latest"
  DOCKER_DRIVER: "overlay2"
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  FULL_DEPLOY_DIR: "$DEPLOY_MAIN_DIR$DEPLOY_DIR"

build:
  stage: build
  image: docker:28.0.0-rc.3-dind
  before_script:
    - until docker info; do sleep 1; done;
  services:
    - name: docker:28.0.0-rc.3-dind
      alias: docker
      command: ["--host=tcp://0.0.0.0:2375", "--tls=false"]
  script:
    - echo "Logging into GitLab Container Registry..."
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - echo "Building Docker image..."
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - echo "Pushing image to GitLab Container Registry..."
    - docker push $IMAGE_NAME:$IMAGE_TAG
  only:
    - main
  dependencies:
    - build

deploy:
  stage: deploy
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts
  script:
    - ssh $SERVER_USER@$SERVER_HOST "
      cd $FULL_DEPLOY_DIR &&
      echo 'Pulling new image $TASK_SERVICE_APP_NAME...' &&
      docker-compose pull $FRONTEND_APP_NAME &&
      echo 'Stopping and removing old service $FRONTEND_APP_NAME...' &&
      docker-compose stop $FRONTEND_APP_NAME &&
      docker-compose rm -f $FRONTEND_APP_NAME &&
      echo 'Starting new service $FRONTEND_APP_NAME...' &&
      docker-compose up -d $FRONTEND_APP_NAME &&
      echo 'Removing unused images...' &&
      docker image prune -f
      "
  only:
    - main